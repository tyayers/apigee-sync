<ProxyEndpoint name="default">
 <PreFlow name="PreFlow">
  <Request>
   <Step>
    <Name>OpenAPI-Spec-Validation-1</Name>
   </Step>
  </Request>
  <Response></Response>
 </PreFlow>
 <PostFlow name="PostFlow">
  <Request></Request>
  <Response></Response>
 </PostFlow>
 <Flows>
  <Flow name="addPet">
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="updatePet">
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet") and (request.verb = "PUT")</Condition>
  </Flow>
  <Flow name="findPetsByStatus">
   <Description>Multiple status values can be provided with comma separated strings</Description>
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet/findByStatus") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="findPetsByTags">
   <Description>Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.</Description>
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet/findByTags") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="getPetById">
   <Description>Returns a single pet</Description>
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet/*") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="updatePetWithForm">
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet/*") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="deletePet">
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet/*") and (request.verb = "DELETE")</Condition>
  </Flow>
  <Flow name="uploadFile">
   <Request>
    <Step>
     <Name>OAuth-v20-1</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/pet/*/uploadImage") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="getInventory">
   <Description>Returns a map of status codes to quantities</Description>
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/store/inventory") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="placeOrder">
   <Request></Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/store/order") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="deleteOrder">
   <Description>For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors</Description>
   <Request></Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/store/order/*") and (request.verb = "DELETE")</Condition>
  </Flow>
  <Flow name="getOrderById">
   <Description>For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions</Description>
   <Request></Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/store/order/*") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="createUser">
   <Description>This can only be done by the logged in user.</Description>
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="createUsersWithArrayInput">
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/createWithArray") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="createUsersWithListInput">
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/createWithList") and (request.verb = "POST")</Condition>
  </Flow>
  <Flow name="loginUser">
   <Request></Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/login") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="logoutUser">
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/logout") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="deleteUser">
   <Description>This can only be done by the logged in user.</Description>
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/*") and (request.verb = "DELETE")</Condition>
  </Flow>
  <Flow name="getUserByName">
   <Request></Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/*") and (request.verb = "GET")</Condition>
  </Flow>
  <Flow name="updateUser">
   <Description>This can only be done by the logged in user.</Description>
   <Request>
    <Step>
     <Name>Verify-API-Key-api_key</Name>
    </Step>
   </Request>
   <Response></Response>
   <Condition>(proxy.pathsuffix MatchesPath "/user/*") and (request.verb = "PUT")</Condition>
  </Flow>
 </Flows>
 <HTTPProxyConnection>
  <BasePath>/v2</BasePath>
  <Properties></Properties>
 </HTTPProxyConnection>
 <RouteRule name="default">
  <TargetEndpoint>default</TargetEndpoint>
 </RouteRule>
</ProxyEndpoint>